@use 'variables'as *;
@use 'mixins'as *;
@use 'media'as *;
@use 'themes'as *;



:root {

    //@ ********* Colors  *********//
    @include generate-color-custom-props($map: $colors);


    //@ ********* Gradients  *********//
    @each $name,
    $colors in $gradients {
        --#{$name}: linear-gradient(to bottom right, #{nth($colors, 1)}, #{nth($colors, 2)});
        --#{$name}-reverse: linear-gradient(to bottom right, #{nth($colors, 2)}, #{nth($colors, 1)});
    }


    //@ ********* Radius  *********//
    @for $i from 1 through 5 {
        --radius-#{$i}: calc(#{$baseRadius} * #{$i});
    }

    --pilled: 25rem;
    --circle: 50%;


    //@ ********* Letter Spacing  *********//
    @for $i from 1 through 5 {
        --letterSpacing-#{$i}: calc(#{$baseLetterSpacing} * #{$i});
    }


    //@ ********* Shadows  *********//
    --shadow-base: 2px 2px 5px rgba(0, 0, 0, 0.336);
    --shadow-light: #{shadow(rg-2)};
    --shadow-dark: #{shadow(lg-1)};
    --shadow-colored: 2px 4px 4px rgba(color('primary.400')),
    3px 6px 8px color('secondary.500');


    //@ ********* Other  *********//
    --max-width: #{$max-width};

    @include respond(xxl) {
        --max-width: calc(#{$max-width} * 1.2);
    }
}


//& ******* Light Theme ******* //
:root[data-theme="light"] {
    @include generate-color-custom-props($map: $colors-light);
}


//& ******* Dark Theme ******* //
:root[data-theme="dark"] {
    @include generate-color-custom-props($map: $colors-dark);
}