@use '../01-Abstracts'as *;


//& ******* Generic ******* //

// row
.row {
    @include flex(row, center, center);
    padding-top: 15rem;

    @include respond(md) {
        flex-direction: column;
    }
}


// container
.container {
    max-width: var(--max-width);
    @include center-mar;
}


// flex-container
.flex-container {
    display: flex;
    gap: 5rem;

    @include respond(lg) {
        flex-direction: column;
        gap: 10rem;
    }

    &>* {
        flex: 1;
    }
}


// grid box/wrapper
.grid-wrapper {
    @include responsive-grid(25rem, 4rem);
}

.grid-box {
    height: 23rem;
    @include flex(column, center, center, 3rem);
    border-radius: var(--radius-3);
    box-shadow: var(--shadow-base);

    &__title {
        color: whitesmoke;
        font-weight: fw(semi-bold);
    }

    &__desc {
        color: whitesmoke;
    }

    &__img {
        width: 6rem;
        height: 6rem;
        animation: scale-up 6s ease-in-out infinite;
    }
}


// Break out of a container 
.bust-out {
    margin: 0 calc(50% - 50vw)
}

@mixin bust-out ($width: 20%) {
    margin: auto calc(50% - 50vw);
    width: $width;
    transform: translateX(calc(50vw - 50%));
}


// clearfix
.clearfix {
    @include clearfix;
}


// section set-up
.section {
    $marginBottom: 3.5rem;
    margin-top: 4px;
    padding-inline: 4rem;


    &-center {
        width: 90vw;
        @include center-mar;
        max-width: $max-width;

        @include mq-min(992px) {
            width: 95vw;
        }
    }


    &-content {
        @include flex(column, start, start, 3rem);
        padding: 0 2rem;
        position: relative;
        margin-bottom: $marginBottom;


        @include respond(lg) {
            align-items: center;
        }
    }


    &-title {
        font-weight: fw(bold);
        margin-bottom: 0;

        &--mb {
            margin-bottom: $marginBottom;
        }
    }


    &-desc {

        p {
            margin-bottom: 1.5rem;
            font-size: fs(sm-3);
        }
    }
}

.anchor-point {
    padding-block: 8rem;
}

//& ******* Visibility ******* //
.hidden {
    visibility: hidden;
    opacity: 0;
    z-index: -1;
}

.shown {
    visibility: visible;
    opacity: 1;
    z-index: 1;
}

.d-none {
    display: none;
}


//& ******* Colored ******* //
.error {
    color: getColor(slate-50);
    background-color: getColor(error);
}


//& ******* Gradients ******* //
@each $name,
$colors in $gradients {

    $opacity: .7;

    .#{$name} {
        background-image: linear-gradient(to bottom right, #{nth($colors, 1)}, #{nth($colors, 2)});
        ;
    }

    .#{$name}--reverse {
        background-image: linear-gradient(to bottom right, #{nth($colors, 2)}, #{nth($colors, 1)});
    }

    .#{$name}--transparent {
        background-image: linear-gradient(to bottom right, #{rgba(nth($colors, 2),$opacity)}, #{rgba(nth($colors, 1),$opacity)});
    }
}


//& ******* Radius ******* //
.sharp {
    border-radius: var(--radius-1) !important;
}

.rounded {
    border-radius: var(--radius-3) !important;
}

.pilled {
    border-radius: var(--pilled) !important;
}

.circle {
    border-radius: var(--circle) !important;
}


//& ******* Shadows ******* //
.shadow-light {
    box-shadow: var(--shadow-light) !important;
}

.shadow-dark {
    box-shadow: var(--shadow-dark) !important;
}


//& ******* Spacing ******* //

$subtractStep: 0.03rem;
$vwStep: 0.15vw;
$reduceAdjustment: 0.85;
$increaseAdjustment: 1.6;


@for $i from 1 through 35 {

    $baseValue: calc(#{$baseGutter} * #{$i});
    $subtractedValue: calc(#{$baseValue} * #{$reduceAdjustment});
    $middleValue: calc(#{$subtractedValue} + (#{$vwStep} * #{$i}));
    $afterValue: calc(#{$baseValue} * #{$increaseAdjustment});
    $clampValue: clamp($baseValue, $middleValue, $afterValue);


    // Margins
    .ma-#{$i} {
        margin: $clampValue;
    }

    .mt-#{$i} {
        margin-top: $clampValue;
    }

    .mb-#{$i} {
        margin-bottom: $clampValue;
    }

    .mr-#{$i} {
        margin-right: $clampValue;
    }

    .ml-#{$i} {
        margin-left: $clampValue;
    }

    .mx-#{$i} {
        margin-inline: $clampValue;
    }

    .my-#{$i} {
        margin-block: $clampValue;
    }

    .mx-auto {
        margin-inline: auto;
    }


    // Paddings
    .pa-#{$i} {
        padding: $baseValue;
    }

    .pt-#{$i} {
        padding-top: $baseValue;
    }

    .pb-#{$i} {
        padding-bottom: $baseValue;
    }

    .pr-#{$i} {
        padding-right: $baseValue;
    }

    .pl-#{$i} {
        padding-left: $baseValue;
    }

    .px-#{$i} {
        padding-inline: $baseValue;
    }

    .py-#{$i} {
        padding-block: $baseValue;
    }
}


//$ **************** Media Based Utils  ****************$//

$text-align-values: left,
right,
justify,
center;

// center text
@each $val in $text-align-values {
    .text-#{$val} {
        text-align: $val;
    }
}


//& ******* Xs Breakpoint ******* //
@include respond(xs) {

    // center text
    @each $val in $text-align-values {
        .text-xs-#{$val} {
            text-align: $val;
        }
    }
}


//& ******* Sm Breakpoint ******* //
@include respond(sm) {

    // center text
    @each $val in $text-align-values {
        .text-sm-#{$val} {
            text-align: $val;
        }
    }
}


//& ******* Md Breakpoint ******* //
@include respond(md) {

    // center text
    @each $val in $text-align-values {
        .text-md-#{$val} {
            text-align: $val;
        }
    }
}


//& ******* Lg Breakpoint ******* //
@include respond(lg) {

    // center text
    @each $val in $text-align-values {
        .text-lg-#{$val} {
            text-align: $val;
        }
    }
}


//& ******* Xl Breakpoint ******* //
@include respond(xl) {

    // center text
    @each $val in $text-align-values {
        .text-xl-#{$val} {
            text-align: $val;
        }
    }
}